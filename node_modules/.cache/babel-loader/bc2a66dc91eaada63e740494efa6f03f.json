{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\work\\\\react-timeline-9000\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Timeline from 'react-timelines';\nimport 'react-timelines/lib/css/style.css';\nimport { START_YEAR, NUM_OF_YEARS, NUM_OF_TRACKS } from './constants';\nimport { buildTimebar, buildTrack, parseDateTracks } from './builders';\nconst MIN_ZOOM = 2;\nconst MAX_ZOOM = 20;\n\nconst fill = n => {\n  const arr = [];\n\n  for (let i = 0; i < n; i += 1) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst clickElement = element => alert(`Clicked element\\n${JSON.stringify(element, null, 2)}`);\n\nconst now = new Date('2021-01-01');\nconst timebar = buildTimebar();\nconst track = {\n  id: '',\n  title: '',\n  childs: '',\n  //array <track>   >>> Subtrack\n  elements: {\n    backgroundColor: '',\n    color: '',\n    dfrom: '',\n    dto: '',\n    title: ''\n  }\n};\nexport default class TimelineApp extends Component {\n  constructor(props) {\n    super(props); // const tracksById = fill(NUM_OF_TRACKS).reduce((acc, i) => {\n    //     const track = buildTrack(i + 1)\n    //     acc[track.id] = track\n    //     return acc\n    // }, {})\n\n    this.handleToggleOpen = () => {\n      console.log(\"handleToggleOpen\");\n      this.setState(({\n        open\n      }) => ({\n        open: !open\n      }));\n    };\n\n    this.handleZoomIn = () => {\n      this.setState(({\n        zoom\n      }) => ({\n        zoom: Math.min(zoom + 1, MAX_ZOOM)\n      }));\n    };\n\n    this.handleZoomOut = () => {\n      this.setState(({\n        zoom\n      }) => ({\n        zoom: Math.max(zoom - 1, MIN_ZOOM)\n      }));\n    };\n\n    this.handleToggleTrackOpen = track => {\n      console.log(\"handleToggleTrackOpen\");\n      this.setState(state => {\n        const tracksById = { ...state.tracksById,\n          [track.id]: { ...track,\n            isOpen: !track.isOpen\n          }\n        };\n        return {\n          tracksById,\n          tracks: Object.values(tracksById)\n        };\n      });\n    };\n\n    const tracks = parseDateTracks(this.props.dataTracks);\n    this.state = {\n      open: false,\n      zoom: 2,\n      // eslint-disable-next-line react/no-unused-state\n      tracksById,\n      tracks: Object.values(tracksById)\n    };\n    console.log('tracksById', tracksById);\n    console.log('Object.values(tracksById),', Object.values(tracksById));\n  }\n\n  render() {\n    const {\n      open,\n      zoom,\n      tracks\n    } = this.state;\n    const start = new Date(`${START_YEAR}`);\n    const end = new Date(`${START_YEAR + NUM_OF_YEARS}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"React Timelines\"), /*#__PURE__*/React.createElement(Timeline, {\n      scale: {\n        // <<<\n        start,\n        end,\n        zoom,\n        zoomMin: MIN_ZOOM,\n        zoomMax: MAX_ZOOM\n      },\n      isOpen: open,\n      toggleOpen: this.handleToggleOpen,\n      zoomIn: this.handleZoomIn,\n      zoomOut: this.handleZoomOut,\n      clickElement: clickElement //<<<\n      ,\n      clickTrackButton: track => {\n        // eslint-disable-next-line no-alert\n        alert(JSON.stringify(track));\n      },\n      timebar: timebar,\n      tracks: tracks //<<<\n      ,\n      now: now //<<<\n      ,\n      toggleTrackOpen: this.handleToggleTrackOpen,\n      enableSticky: true,\n      scrollToNow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/work/react-timeline-9000/src/App.js"],"names":["React","Component","Timeline","START_YEAR","NUM_OF_YEARS","NUM_OF_TRACKS","buildTimebar","buildTrack","parseDateTracks","MIN_ZOOM","MAX_ZOOM","fill","n","arr","i","push","clickElement","element","alert","JSON","stringify","now","Date","timebar","track","id","title","childs","elements","backgroundColor","color","dfrom","dto","TimelineApp","constructor","props","handleToggleOpen","console","log","setState","open","handleZoomIn","zoom","Math","min","handleZoomOut","max","handleToggleTrackOpen","state","tracksById","isOpen","tracks","Object","values","dataTracks","render","start","end","zoomMin","zoomMax"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Timeline from 'react-timelines';\r\nimport 'react-timelines/lib/css/style.css'\r\n\r\nimport { START_YEAR, NUM_OF_YEARS, NUM_OF_TRACKS } from './constants'\r\n\r\n\r\nimport {buildTimebar, buildTrack, parseDateTracks} from './builders'\r\nconst MIN_ZOOM = 2\r\nconst MAX_ZOOM = 20\r\nconst fill = n => {\r\n    const arr = []\r\n    for (let i = 0; i < n; i += 1) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst clickElement = element => alert(`Clicked element\\n${JSON.stringify(element, null, 2)}`)\r\n\r\nconst now = new Date('2021-01-01')\r\nconst timebar = buildTimebar()\r\n\r\nconst track = {\r\n    id: '',\r\n    title: '',\r\n    childs: '', //array <track>   >>> Subtrack\r\n    elements: {\r\n        backgroundColor: '',\r\n        color: '',\r\n        dfrom: '',\r\n        dto: '',\r\n        title: ''\r\n    }\r\n}\r\n\r\n\r\nexport default class TimelineApp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // const tracksById = fill(NUM_OF_TRACKS).reduce((acc, i) => {\r\n        //     const track = buildTrack(i + 1)\r\n        //     acc[track.id] = track\r\n        //     return acc\r\n        // }, {})\r\n\r\n        const tracks = parseDateTracks(this.props.dataTracks)\r\n\r\n        this.state = {\r\n            open: false,\r\n            zoom: 2,\r\n            // eslint-disable-next-line react/no-unused-state\r\n            tracksById,\r\n            tracks: Object.values(tracksById),\r\n        }\r\n        console.log('tracksById', tracksById)\r\n        console.log('Object.values(tracksById),', Object.values(tracksById))\r\n    }\r\n\r\n    handleToggleOpen = () => {\r\n        console.log(\"handleToggleOpen\")\r\n        this.setState(({ open }) => ({ open: !open }))\r\n    }\r\n\r\n    handleZoomIn = () => {\r\n        this.setState(({ zoom }) => ({ zoom: Math.min(zoom + 1, MAX_ZOOM) }))\r\n    }\r\n\r\n    handleZoomOut = () => {\r\n        this.setState(({ zoom }) => ({ zoom: Math.max(zoom - 1, MIN_ZOOM) }))\r\n    }\r\n\r\n    handleToggleTrackOpen = track => {\r\n        console.log(\"handleToggleTrackOpen\")\r\n        this.setState(state => {\r\n            const tracksById = {\r\n                ...state.tracksById,\r\n                [track.id]: {\r\n                    ...track,\r\n                    isOpen: !track.isOpen,\r\n                },\r\n            }\r\n\r\n            return {\r\n                tracksById,\r\n                tracks: Object.values(tracksById),\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { open, zoom, tracks } = this.state\r\n        const start = new Date(`${START_YEAR}`)\r\n        const end = new Date(`${START_YEAR + NUM_OF_YEARS}`)\r\n        return (\r\n            <div className=\"app-container\">\r\n                <h1 className=\"title\">React Timelines</h1>\r\n                <Timeline\r\n                    scale={{ // <<<\r\n                        start,\r\n                        end,\r\n                        zoom,\r\n                        zoomMin: MIN_ZOOM,\r\n                        zoomMax: MAX_ZOOM,\r\n                    }}\r\n                    isOpen={open}\r\n                    toggleOpen={this.handleToggleOpen}\r\n                    zoomIn={this.handleZoomIn}\r\n                    zoomOut={this.handleZoomOut}\r\n                    clickElement={clickElement} //<<<\r\n                    clickTrackButton={track => {\r\n                        // eslint-disable-next-line no-alert\r\n                        alert(JSON.stringify(track))\r\n                    }}\r\n                    timebar={timebar}\r\n                    tracks={tracks}//<<<\r\n                    now={now} //<<<\r\n                    toggleTrackOpen={this.handleToggleTrackOpen}\r\n                    enableSticky\r\n                    scrollToNow\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}